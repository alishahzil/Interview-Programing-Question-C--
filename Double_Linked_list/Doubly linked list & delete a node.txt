#include <iostream>
using namespace std;

class node{
  public:
  int data;
  node *next;
  node *prev;
  node(int val){
    data = val;
    next = NULL;
    prev = NULL;
  }
};

void insertnodeatTail(node* &head,int data){
  node *n = new node(data);
  if(head ==NULL){
    head = n;
    return;
  }
  node *temp = head;
  while(temp->next != NULL){
    temp = temp->next;
  }
  temp->next = n;
  n->prev = temp;
  return;
};


void display(node * & head){
  node *temp = head;
  while(temp->next !=NULL){
    cout<<temp->data<<"-->";
    temp = temp->next;
  }
  cout<<temp->data<<endl;
  
  while(temp->prev != NULL){
    cout<<"<--"<<temp->data;
    temp = temp->prev;
  }
  cout<<temp->data<<endl;
  return;
  
};

void deletenode(node * &head, int position){
  int counter = 1;
  node * temp = head;
  while(temp->next !=NULL){
    if(counter == position){
      break;
    }
    temp = temp->next;
    counter++;
  }
  temp->prev->next = temp->next;
  temp->next->prev = temp->prev;
  return;
}
int main() 
{
    node* head = NULL;
    insertnodeatTail(head,1);
    insertnodeatTail(head,2);
    insertnodeatTail(head,3);
    insertnodeatTail(head,4);
    insertnodeatTail(head,5);
    insertnodeatTail(head,6);
    insertnodeatTail(head,7);
    insertnodeatTail(head,8);
    insertnodeatTail(head,9);
    insertnodeatTail(head,10);
    insertnodeatTail(head,22);
    insertnodeatTail(head,11);
    
    display(head);
    deletenode(head,5);
    display(head);

    return 0;
}
