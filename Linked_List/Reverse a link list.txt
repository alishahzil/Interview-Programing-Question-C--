#include <iostream>
using namespace std;

class node{
  public:
  int data;
  node* next;
  
  node(int val){
    data = val;
    next = NULL;
  }
  
};

void insertnodeatTail(node* &head,int val){
   node * n = new node(val);
   
   if(head == NULL){
     head = n;
     return;
   }
   
   node* temp = head;
   while(temp->next!= NULL){
     temp = temp->next;
   }
   temp->next = n;
  return;
};

void display(node* &head){
  if(head == NULL){
    cout<<"link list no created yet"<<endl;
    return ;
  }
  node* temp = head;
  
  while(temp->next != NULL){
    cout<<temp->data<<"-->";
    temp = temp->next;
  }
  cout<<temp->data<<endl;
  return;
}
void inverse(node * &head){
  node * prev ,*current,*next;
  prev = NULL;
  current = head;
  next = current->next;
  while(next->next != NULL){
    current->next = prev;
    prev = current;
    current = next;
    next= next->next;
  }
  current->next = prev;
  prev = current;
  current=next;
  current->next=prev;
  head = current;
  return;
}

int main() 
{
    node* head = NULL;
    insertnodeatTail(head,1);
    insertnodeatTail(head,2);
    insertnodeatTail(head,3);
    insertnodeatTail(head,4);
    insertnodeatTail(head,5);
    insertnodeatTail(head,6);
    insertnodeatTail(head,7);
    insertnodeatTail(head,8);
    insertnodeatTail(head,9);
    insertnodeatTail(head,10);
    insertnodeatTail(head,22);
    insertnodeatTail(head,11);
    
    display(head);
    inverse(head);
    display(head);
    return 0;
}